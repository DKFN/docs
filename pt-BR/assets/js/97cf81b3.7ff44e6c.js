"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[3978],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return c}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),k=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=k(t.components);return n.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=k(a),c=r,N=s["".concat(p,".").concat(c)]||s[c]||d[c]||l;return a?n.createElement(N,i(i({ref:e},m),{},{components:a})):n.createElement(N,i({ref:e},m))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var k=2;k<l;k++)i[k]=a[k];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},11769:function(t,e,a){a.d(e,{Kn:function(){return r},GX:function(){return l},qx:function(){return i}});a(87462),a(63366),a(67294);var n=a(3905),r=function(){return(0,n.kt)("a",{class:"authority-availability",href:"/docs/core-concepts/scripting/authority-concepts#methods-and-events-availability"},(0,n.kt)("img",{src:"/img/scripting/authority-only.svg",title:"authority-only - you can only call this method on the side which spawned it!"}))},l=function(){return(0,n.kt)("a",{class:"authority-availability",href:"/docs/core-concepts/scripting/authority-concepts#methods-and-events-availability"},(0,n.kt)("img",{src:"/img/scripting/server-only.svg",title:"server-only - you can only call this method on server side!"}))},i=function(){return(0,n.kt)("a",{class:"authority-availability",href:"/docs/core-concepts/scripting/authority-concepts#methods-and-events-availability"},(0,n.kt)("img",{src:"/img/scripting/client-only.svg",title:"client-only - you can only call this method on client side!"}))}},60479:function(t,e,a){a.d(e,{Mr:function(){return r},Ld:function(){return l},ge:function(){return i},iA:function(){return o},Bg:function(){return p},IK:function(){return k},NY:function(){return m}});a(87462),a(63366),a(67294);var n=a(3905),r=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#number"},"number")},l=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#string"},"string")},i=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#boolean"},"boolean")},o=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#table"},"table")},p=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#iterator"},"iterator")},k=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#any"},"any")},m=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/glossary/basic-types#function"},"function")}},91174:function(t,e,a){a.d(e,{OW:function(){return r},i$:function(){return l},Il:function(){return i},D6:function(){return o},Wh:function(){return p}});a(87462),a(63366),a(67294);var n=a(3905),r=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/utility-classes/vector"},"Vector")},l=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/utility-classes/rotator"},"Rotator")},i=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/utility-classes/color"},"Color")},o=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/utility-classes/quaternion"},"Quat")},p=function(){return(0,n.kt)("a",{href:"/docs/scripting-reference/utility-classes/vectortwod"},"Vector2D")}},87611:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return m},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return f}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=a(11769),o=a(60479),p=a(91174),k=["components"],m={description:"Base class for all Actors entities",tags:["base-class"]},d="Base Actor",s={unversionedId:"scripting-reference/classes/base-classes/actor",id:"scripting-reference/classes/base-classes/actor",isDocsHomePage:!1,title:"Base Actor",description:"Base class for all Actors entities",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/scripting-reference/classes/base-classes/actor.mdx",sourceDirName:"scripting-reference/classes/base-classes",slug:"/scripting-reference/classes/base-classes/actor",permalink:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor",editUrl:"https://github.com/nanos-world/docs/edit/master/docs/scripting-reference/classes/base-classes/actor.mdx",tags:[{label:"base-class",permalink:"/pt-BR/docs/next/tags/base-class"}],version:"current",frontMatter:{description:"Base class for all Actors entities",tags:["base-class"]},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udda5\ufe0f WebUI",permalink:"/pt-BR/docs/next/scripting-reference/classes/webui"},next:{title:"Base Paintable",permalink:"/pt-BR/docs/next/scripting-reference/classes/base-classes/paintable"}},c=[{value:"Functions",id:"functions",children:[]}],N=function(t){return function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}},u=N("BaseActorFunctions"),g=N("BaseActorEvents"),h={toc:c};function f(t){var e=t.components,a=(0,r.Z)(t,k);return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"base-actor"},"Base Actor"),(0,l.kt)("p",null,"Base class for all Actors entities"),(0,l.kt)("p",null,"An ",(0,l.kt)("strong",{parentName:"p"},"Actor")," is an object which can be spawned and destroyed through Lua code. Actors support 3D transformations such as translation ","(","location",")",", rotation, and scaling."),(0,l.kt)("p",null,"In nanos world, ",(0,l.kt)("strong",{parentName:"p"},"Actor")," is base for several entities, and all those entities share the same ",(0,l.kt)("strong",{parentName:"p"},"Methods")," and ",(0,l.kt)("strong",{parentName:"p"},"Events")," described in this page."),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"This is the base Class for all actors we have. You cannot spawn it directly. :::")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("h2",{parentName:"div",id:"static-functions"},"Static Functions"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"th"},"Returns")),(0,l.kt)("th",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"th"},"Name")),(0,l.kt)("th",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"th"},"Description")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.iA,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor#getall"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"GetAll")))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Gets a copy table with all entities ",(0,l.kt)("em",{parentName:"td"},"(","copy",")"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor#getbyindex"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"GetByIndex")))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Gets a specific entity at index ",(0,l.kt)("em",{parentName:"td"},"(","direct",")"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor#getcount"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"GetCount")))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Gets how many entities of this class exist ",(0,l.kt)("em",{parentName:"td"},"(direct)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Bg,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor#getall"},(0,l.kt)("strong",{parentName:"a"},(0,l.kt)("inlineCode",{parentName:"strong"},"GetPairs")))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Gets an iterator with all entities of this class ",(0,l.kt)("em",{parentName:"td"},"(","direct",")"))))),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),(0,l.kt)("strong",{parentName:"h5"},"Note:")," Some of the following methods don't work in some specific entities. :::")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"import BaseActorFunctions from '/docs/scripting-reference/classes/base-classes/_base-actor-functions.mdx';"),(0,l.kt)(u,{hidden_reference:!0,mdxType:"BaseActorFunctions"}),(0,l.kt)("h2",{parentName:"div",id:"events"},"Events"),(0,l.kt)("p",{parentName:"div"},"import BaseActorEvents from '/docs/scripting-reference/classes/base-classes/_base-actor-events.mdx';"),(0,l.kt)(g,{hidden_reference:!0,mdxType:"BaseActorEvents"}),(0,l.kt)("h2",{parentName:"div",id:"static-functions-detailed"},"Static Functions Detailed"),(0,l.kt)("h3",{parentName:"div",id:"getall"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetAll")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Returns a copy table with all entities of this class")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local entities_copy = Player.GetAll()\nentities_copy[1] -- Player 1\nentities_copy[5] -- Player 5\n")),(0,l.kt)("h3",{parentName:"div",id:"getbyindex"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetByIndex")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Returns an ",(0,l.kt)("a",{parentName:"p",href:"actor"},"Actor")," of the specific class at index")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local first_character = Character.GetByIndex(1)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"index"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"The index of the entity")))),(0,l.kt)("h3",{parentName:"div",id:"getcount"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetCount")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Returns how many entities of this class exist")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"local player_count = Player.GetCount()\n")),(0,l.kt)("h3",{parentName:"div",id:"getpairs"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetPairs")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Returns an iterator with all entities of this class to be used with ",(0,l.kt)("inlineCode",{parentName:"p"},"ipairs")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"pairs"),". This is a more performatic way than ",(0,l.kt)("inlineCode",{parentName:"p"},"GetAll()")," as it will return the iterator to access the entities directly, instead of creating and returning a copy of the entities table."),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," Destroying entities from inside GetPairs","(",")"," loop will cause the iteration to change it's size during the process. If you want to loop-and-destroy, please use ",(0,l.kt)("inlineCode",{parentName:"p"},"GetAll()"),".")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'for k, player in ipairs(Player.GetPairs()) do\n    Package.Log(player:GetName() .. " is connected!")\nend\n')),(0,l.kt)("h2",{parentName:"div",id:"functions-detailed"},"Functions Detailed"),(0,l.kt)("h3",{parentName:"div",id:"addimpulse"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"AddImpulse")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Applies a Force in world coordinate on this Actor ","(","the force is applied on Client side, by the ","(","in most of cases",")"," the closest player of this object",")")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:AddImpulse(force, velocity_change)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.OW,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"force"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Force to apply")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"velocity_change"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore mass")))),(0,l.kt)("h3",{parentName:"div",id:"attachto"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"AttachTo")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Attaches this Actor to any other Actor, optionally at a specific bone"),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"AttachmentRule.KeepRelative"))," will keep the current Relative Position/Rotation if already attached."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"AttachmentRule.KeepWorld"))," will calculate the new Relative Position/Rotation so the Actor stays on the same position after attached."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"AttachmentRule.SnapToTarget"))," will set the Actor to the same position/rotation to ",(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"other_actor"))," ","(","or at the bone location",")"," and reset it's Relative Position/Rotation to ",(0,l.kt)("strong",{parentName:"li"},"zero"),"."))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:AttachTo(other_actor, attachment_rule, bone_name, autodestroy_when_detached)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"other"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Other actor to attach")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/docs/scripting-reference/glossary/enums#attachmentrule"},"AttachmentRule")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"attachment_rule"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"SnapToTarget")),(0,l.kt)("td",{parentName:"tr",align:"left"},"How to attach")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Ld,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"bone_name"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'""')),(0,l.kt)("td",{parentName:"tr",align:"left"},"Which bone to attach")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"autodestroy_when_detached"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"false")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to auto destroy when detached")))),(0,l.kt)("h3",{parentName:"div",id:"destroy"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"Destroy")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Destroys this Actor")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Destroy()\n")),(0,l.kt)("h3",{parentName:"div",id:"detach"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"Detach")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Detaches this Actor from AttachedTo Actor")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Detach()\n")),(0,l.kt)("h3",{parentName:"div",id:"setcollision"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetCollision")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets the actor's collision")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetCollision(collision_type)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/docs/scripting-reference/glossary/enums#collisiontype"},"CollisionType")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"collision_type"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Collision Type")))),(0,l.kt)("h3",{parentName:"div",id:"setforce"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetForce")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Adds a permanent force to this actor Set to Vector","(","0, 0, 0",")"," to cancel")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetForce(force, is_local)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.OW,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"force"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Force to apply")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"is_local"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"true")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to apply the force at local space")))),(0,l.kt)("h3",{parentName:"div",id:"setgravityenabled"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetGravityEnabled")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets the actor's gravity enabled")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetGravityEnabled(is_enabled)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"is_enabled"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h3",{parentName:"div",id:"sethighlightenabled"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetHighlightEnabled")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets if this Actors is Highlighting at a specific Index color")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetHighlightEnabled(is_enabled)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"is_enabled"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Enabled")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h3",{parentName:"div",id:"setinitiallocation"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetInitialLocation")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets the initial location")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetInitialLocation(vector)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.OW,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"location"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"New Location")))),(0,l.kt)("h3",{parentName:"div",id:"setlocation"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetLocation")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets the actor's location in the game world")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetLocation(vector)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.OW,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"location"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"New Location")))),(0,l.kt)("h3",{parentName:"div",id:"setnetworkauthority"},(0,l.kt)(i.qx,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetNetworkAuthority")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets this actor's new Player network authority. This player will be manually assigned to handle this actor physics and share it's location with other clients. The authority assignment will still be overridden by the game automatically, to avoid that set a big time value so the player can keep longer with the authority and override the natural authority selection"),(0,l.kt)("p",{parentName:"blockquote"},"Please refer to ",(0,l.kt)("a",{parentName:"p",href:"/docs/core-concepts/scripting/authority-concepts#network-authority"},"Network Authority")," for more information")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetNetworkAuthority(player, time_ms)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Player"),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"player"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"nil")),(0,l.kt)("td",{parentName:"tr",align:"left"},"New player which will assume the Network Authority of this entity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"time_ms"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"0")),(0,l.kt)("td",{parentName:"tr",align:"left"},"New player which will assume the Network Authority of this entity")))),(0,l.kt)("h3",{parentName:"div",id:"setrotation"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetRotation")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets the actor's rotation in the game world")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetRotation(rotator)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.i$,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rotation"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"New Rotation")))),(0,l.kt)("h3",{parentName:"div",id:"setscale"},(0,l.kt)(i.Kn,null),(0,l.kt)("inlineCode",{parentName:"h3"},"SetScale")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets the actor's scale")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetScale(vector)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.OW,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"scale"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"New Scale")))),(0,l.kt)("h3",{parentName:"div",id:"setvalue"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetValue")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Sets a value in this entity, which can be accessed by any package ","(","optionally sync on clients if called from server",")"),(0,l.kt)("p",{parentName:"blockquote"},"Please refer to ",(0,l.kt)("a",{parentName:"p",href:"/docs/core-concepts/scripting/entity-values"},"Entity Values")," for more information")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetValue(key, value, sync_on_clients)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Ld,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"key"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.IK,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"value"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h3",{parentName:"div",id:"translateto"},(0,l.kt)("inlineCode",{parentName:"h3"},"TranslateTo")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Smoothly moves this actor to a Location with a certain Speed - optionally enables sweep to stop when colliding - use teleport flag will not affect velocity")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:TranslateTo(location, speed, sweep, teleport)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.OW,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"location"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Location to Translate to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"speed"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"sweep"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"teleport"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h3",{parentName:"div",id:"rotateto"},(0,l.kt)("inlineCode",{parentName:"h3"},"RotateTo")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Smoothly rotates this actor to a Rotation with a certain Speed")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:RotateTo(otation, speed, teleport)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(p.i$,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"rotation"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Rotation to Translate to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Mr,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"speed"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.ge,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"teleport"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Whether to affect the current Velocity")))),(0,l.kt)("h3",{parentName:"div",id:"isgravityenabled"},(0,l.kt)("inlineCode",{parentName:"h3"},"IsGravityEnabled")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the actor's gravity enabled"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.ge,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsGravityEnabled()\n")),(0,l.kt)("h3",{parentName:"div",id:"isinwater"},(0,l.kt)("inlineCode",{parentName:"h3"},"IsInWater")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets if the actor is in Water"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.ge,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsInWater()\n")),(0,l.kt)("h3",{parentName:"div",id:"isnetworkdistributed"},(0,l.kt)("inlineCode",{parentName:"h3"},"IsNetworkDistributed")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets if the actor is network distributed. Only actors being network distributed can be set network authority."),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.ge,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsNetworkDistributed()\n")),(0,l.kt)("h3",{parentName:"div",id:"isvalid"},(0,l.kt)("inlineCode",{parentName:"h3"},"IsValid")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets if this entity is valid ","(","i.e. wasn't destroyed and points to a valid entity",")"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.ge,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsValid()\n")),(0,l.kt)("h3",{parentName:"div",id:"getattachedentities"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetAttachedEntities")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets all actors attached to this entity"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.iA,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetAttachedEntities()\n")),(0,l.kt)("h3",{parentName:"div",id:"getattachedto"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetAttachedTo")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the actor I'm attached to"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.IK,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetAttachedTo()\n")),(0,l.kt)("h3",{parentName:"div",id:"getbounds"},(0,l.kt)(i.qx,null),(0,l.kt)("inlineCode",{parentName:"h3"},"GetBounds")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the actor bounds size"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.iA,null)," in format ",(0,l.kt)("inlineCode",{parentName:"p"},'{"Origin", "BoxExtent", "SphereRadius"}'))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetBounds()\n")),(0,l.kt)("h3",{parentName:"div",id:"getcollision"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetCollision")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the current actor's collision"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.Mr,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetCollision()\n")),(0,l.kt)("h3",{parentName:"div",id:"getid"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetID")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the network ID of this entity ","(","same in both client and server",")"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.Mr,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetID()\n")),(0,l.kt)("h3",{parentName:"div",id:"getlocation"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetLocation")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Get the actor's position in the game world"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(p.OW,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetLocation()\n")),(0,l.kt)("h3",{parentName:"div",id:"getinitiallocation"},(0,l.kt)(i.qx,null),(0,l.kt)("inlineCode",{parentName:"h3"},"GetInitialLocation")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the initial location"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(p.OW,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetInitialLocation()\n")),(0,l.kt)("h3",{parentName:"div",id:"getrotation"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetRotation")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the actor's rotation in the game world"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(p.i$,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetRotation()\n")),(0,l.kt)("h3",{parentName:"div",id:"getscale"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetScale")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the actor's scale"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(p.OW,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetScale()\n")),(0,l.kt)("h3",{parentName:"div",id:"gettype"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetType")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the type of this Actor"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.Ld,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetType()\n")),(0,l.kt)("h3",{parentName:"div",id:"getvalue"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetValue")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets a value given a key. Please refer to ",(0,l.kt)("a",{parentName:"p",href:"/docs/core-concepts/scripting/entity-values"},"Entity Values")," for more information"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(o.IK,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetValue(key)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Ld,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"key"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"},"Key")))),(0,l.kt)("h3",{parentName:"div",id:"getvelocity"},(0,l.kt)(i.qx,null),(0,l.kt)("inlineCode",{parentName:"h3"},"GetVelocity")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Gets the current actor Velocity"),(0,l.kt)("p",{parentName:"blockquote"},"Returns ",(0,l.kt)(p.OW,null))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetVelocity()\n")),(0,l.kt)("h3",{parentName:"div",id:"subscribe"},(0,l.kt)("inlineCode",{parentName:"h3"},"Subscribe")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Subscribes for an Event")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Subscribe(event_name, callback)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Ld,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event_name"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.NY,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"function"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h3",{parentName:"div",id:"unsubscribe"},(0,l.kt)("inlineCode",{parentName:"h3"},"Unsubscribe")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Unsubscribes from all subscribed Events in this Entity and in this Package, optionally passing the function to unsubscribe only that callback")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Unsubscribe(event_name, callback)\n")),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Ld,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"event_name"))),(0,l.kt)("td",{parentName:"tr",align:"left"}),(0,l.kt)("td",{parentName:"tr",align:"left"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.NY,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"function"))),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"nil")),(0,l.kt)("td",{parentName:"tr",align:"left"})))),(0,l.kt)("h2",{parentName:"div",id:"events-detailed"},"Events Detailed"),(0,l.kt)("h3",{parentName:"div",id:"destroy-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"Destroy")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Triggered when an Entity is Destroyed")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'Vehicle.Subscribe("Destroy", function(self)\n    -- called when any vehicle is destroyed\nend)\n')),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"self")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The entity which has been destroyed")))),(0,l.kt)("h3",{parentName:"div",id:"spawn"},(0,l.kt)("inlineCode",{parentName:"h3"},"Spawn")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Triggered when an Entity is Spawned/Created")),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'Vehicle.Subscribe("Spawn", function(self)\n    -- called when a vehicle is spawned\nend)\n')),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"self")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The entity which has been spawned")))),(0,l.kt)("h3",{parentName:"div",id:"valuechange"},(0,l.kt)("inlineCode",{parentName:"h3"},"ValueChange")),(0,l.kt)("blockquote",{parentName:"div"},(0,l.kt)("p",{parentName:"blockquote"},"Triggered when an Entity has it\u2019s value changed with ",(0,l.kt)("inlineCode",{parentName:"p"},":SetValue()"))),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'Vehicle.Subscribe("ValueChange", function(self, key, value)\n    -- called when any Vehicle had it\'s value changed with :SetValue()\nend)\n')),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"self")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The entity which has the value changed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.Ld,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"key")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The key changed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)(o.IK,null)),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"value")),(0,l.kt)("td",{parentName:"tr",align:"left"},"The value changed")))))))}f.isMDXComponent=!0}}]);